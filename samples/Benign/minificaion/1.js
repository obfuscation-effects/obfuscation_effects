/*
 (c) 2012 observe.it (observe.it) <opensource@observe.it>
 MIT Licensed
*/
var EventEmitter=this.EventEmitter||require("events").EventEmitter,keys=Object.keys||function(){var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable("toString"),d="toString toLocaleString valueOf hasOwnProperty isPrototypeOf propertyIsEnumerable constructor".split(" "),f=d.length;return function(c){if("object"!==typeof c&&"function"!==typeof c||null===c)throw new TypeError("Object.keys called on a non-object");var g=[],e;for(e in c)a.call(c,e)&&g.push(e);if(b)for(e=0;e<f;e++)a.call(c,
d[e])&&g.push(d[e]);return g}}();function Protocol(a,b){this.JSencode=a||JSON.stringify;this.JSdecode=b||JSON.parse;this.messages=this.decoded=this.encoded=0;EventEmitter.call(this)}Protocol.prototype=new EventEmitter;Protocol.prototype.constructor=Protocol;Protocol.types={disconnect:"0",connect:"1",handshake:"2",heartbeat:"3",codec:"4",event:"5",message:"6",reset:"7",error:"8"};Protocol.typelist=keys(Protocol.types);
Protocol.prototype.encodec=function(a){try{return this.JSencode(a)}catch(b){this.emit("encode error",b,a)}return""};Protocol.prototype.decodec=function(a){try{return this.JSdecode(a)}catch(b){this.emit("decode error",b,a)}return{}};
Protocol.prototype.encode=function(a){var b=a.type,d=Protocol.types[b],f=""+(a.id||++this.messages);switch(b){case "codec":var c=this.encodec(a.message);break;case "event":c=this.encodec({event:a.name,args:a.args})}c=c||(a.message?""+a.message:"");a=c.length+d.length+f.length+3;a+=(""+a).length;this.encoded++;return d+"#"+f+"#"+a+"#"+c};Protocol.extract=/(\d+)#(\d+)?#(\d+)#(.*)/;
Protocol.prototype.decode=function(a){a=a.toString("UTF-8");var b=a.match(Protocol.extract);if(!b)return!1;var d=Protocol.typelist[b[1]];var f=+b[2];a=b[4]||"";switch(d){case "codec":b=this.decodec(a);if(!b)return!1;break;case "event":b=this.decodec(a);if(!b)return!1;break;default:b=a}this.emit("message",d,b,f,a);this.decoded++;return!0};Protocol.prototype.createStream=function(a){return new (require("./protocolstream"))(this,a)};module.exports=Protocol;Protocol.version=1;
